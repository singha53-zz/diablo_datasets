testErr
diabloFullTest <- diabloTestErr(X_train = X.train[names(X.test)], y_train = Y.train, X_test = X.test, y_test = Y.test, keepX = lapply(diabloNullDesign$choice.keepX, function(i) i[-ncomp]), design=design, ncomp=3, model_name="DIABLO_Full") %>%
filter(dist == "centroids.dist")
diabloFullTest
diabloTestErr = function(X_train, y_train, X_test, y_test, keepX, design, ncomp, model_name){
result <- block.splsda(X = X_train, Y = y_train, ncomp = ncomp, keepX = keepX, scheme = "centroid", design = design)
computeTestError(result, model_name, X_test, y_test)
}
computeTestError = function(model, name, X_test, y_test, ncomp){
pred <- predict(model, X_test, dist = "all")
testErr <- lapply(pred$WeightedVote, function(i) {
mat <- table(factor(i[, ncomp], levels(y_test)), y_test)
mean((colSums(mat)-diag(mat))/colSums(mat))
}) %>%
do.call(cbind, .) %>%
as.data.frame() %>%
gather(dist, error) %>%
mutate(sd = NA) %>%
mutate(cohort = "test", method=name)
}
diabloFullTest <- diabloTestErr(X_train = X.train[names(X.test)], y_train = Y.train, X_test = X.test, y_test = Y.test, keepX = lapply(diabloNullDesign$choice.keepX, function(i) i[-ncomp]), design=design, ncomp=3, model_name="DIABLO_Full") %>%
filter(dist == "centroids.dist")
diabloTestErr = function(X_train, y_train, X_test, y_test, keepX, design, ncomp, model_name){
result <- block.splsda(X = X_train, Y = y_train, ncomp = ncomp, keepX = keepX, scheme = "centroid", design = design)
computeTestError(result, model_name, X_test, y_test, ncomp)
}
computeTestError = function(model, model_name, X_test, y_test, ncomp){
pred <- predict(model, X_test, dist = "all")
testErr <- lapply(pred$WeightedVote, function(i) {
mat <- table(factor(i[, ncomp], levels(y_test)), y_test)
mean((colSums(mat)-diag(mat))/colSums(mat))
}) %>%
do.call(cbind, .) %>%
as.data.frame() %>%
gather(dist, error) %>%
mutate(sd = NA) %>%
mutate(cohort = "test", method=model_name)
}
diabloFullTest <- diabloTestErr(X_train = X.train[names(X.test)], y_train = Y.train, X_test = X.test, y_test = Y.test, keepX = lapply(diabloNullDesign$choice.keepX, function(i) i[-ncomp]), design=design, ncomp=3, model_name="DIABLO_Full") %>%
filter(dist == "centroids.dist")
diabloFullTest
full_join(diabloNullDesign$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX),
diabloNullDesign$error.rate.sd %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, sd, -keepX),
by=c("keepX","comp")) %>%
group_by(comp) %>%
filter(error == min(error))
full_join(diabloNullDesign$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX),
diabloNullDesign$error.rate.sd %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, sd, -keepX),
by=c("keepX","comp")) %>%
group_by(comp) %>%
filter(error == min(error)) %>%
filter(comp == "comp3")
full_join(diabloNullDesign$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX),
diabloNullDesign$error.rate.sd %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, sd, -keepX),
by=c("keepX","comp")) %>%
group_by(comp) %>%
filter(error == min(error)) %>%
filter(comp == "comp3")
diabloFullTrain <- full_join(diabloNullDesign$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX),
diabloNullDesign$error.rate.sd %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, sd, -keepX),
by=c("keepX","comp")) %>%
group_by(comp) %>%
filter(error == min(error)) %>%
filter(comp == "comp3")
diabloFullTest
diabloFullTrain
rbind(data.frame(error=diabloFullTrain$error, sd=diabloFullTrain$sd, cohort="train", method="DIABLO_Full"),
diabloFullTest[, -1])
rbind(data.frame(error=diabloFullTrain$error, sd=diabloFullTrain$sd, cohort="train", method="DIABLO_Full"),
diabloFullTest[, -1])
diabloFullTrain <- full_join(diabloFullDesign$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX),
diabloFullDesign$error.rate.sd %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, sd, -keepX),
by=c("keepX","comp")) %>%
group_by(comp) %>%
filter(error == min(error))
diabloFullTrain
diabloFullTest <- diabloTestErr(X_train = X.train[names(X.test)], y_train = Y.train, X_test = X.test, y_test = Y.test, keepX = lapply(diabloFullDesign$choice.keepX, function(i) i[-ncomp]), design=design, ncomp=4, model_name="DIABLO_Full") %>%
filter(dist == "centroids.dist")
diabloFullTest <- diabloTestErr(X_train = X.train[names(X.test)], y_train = Y.train, X_test = X.test, y_test = Y.test, keepX = lapply(diabloFullDesign$choice.keepX, function(i) i[-ncomp]), design=design, ncomp=4, model_name="DIABLO_Full") %>%
filter(dist == "centroids.dist")
rbind(data.frame(error=diabloFullTrain$error, sd=diabloFullTrain$sd, cohort="train", method="DIABLO_Full"),
diabloFullTest[, -1])
diabloFullTest
rbind(data.frame(error=diabloFullTrain$error, sd=diabloFullTrain$sd, cohort="train", method="DIABLO_Full"),
diabloFullTest[, -1])
diabloFullTrain <- full_join(diabloFullDesign$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX),
diabloFullDesign$error.rate.sd %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, sd, -keepX),
by=c("keepX","comp")) %>%
group_by(comp) %>%
filter(error == min(error)) %>%
filter(comp == "comp4")
diabloFullTrain
rbind(data.frame(error=diabloFullTrain$error, sd=diabloFullTrain$sd, cohort="train", method="DIABLO_Full"),
diabloFullTest[, -1])
## keep 4 components
diabloFullTest <- diabloTestErr(X_train = X.train[names(X.test)], y_train = Y.train, X_test = X.test, y_test = Y.test, keepX = lapply(diabloFullDesign$choice.keepX, function(i) i[-ncomp]), design=design, ncomp=3, model_name="DIABLO_Full") %>%
filter(dist == "centroids.dist")
rbind(data.frame(error=diabloFullTrain$error, sd=diabloFullTrain$sd, cohort="train", method="DIABLO_Full"),
diabloFullTest[, -1])
diabloFullTrain <- full_join(diabloFullDesign$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX),
diabloFullDesign$error.rate.sd %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, sd, -keepX),
by=c("keepX","comp")) %>%
group_by(comp) %>%
filter(error == min(error)) %>%
filter(comp == "comp4")
## keep 4 components
diabloFullTest <- diabloTestErr(X_train = X.train[names(X.test)], y_train = Y.train, X_test = X.test, y_test = Y.test, keepX = lapply(diabloFullDesign$choice.keepX, function(i) i[-ncomp]), design=design, ncomp=3, model_name="DIABLO_Full") %>%
filter(dist == "centroids.dist")
rbind(data.frame(error=diabloFullTrain$error, sd=diabloFullTrain$sd, cohort="train", method="DIABLO_Full"),
diabloFullTest[, -1])
rbind(rbind(data.frame(error=diabloNullTrain$error, sd=diabloNullTrain$sd, cohort="train", method="DIABLO_Null"),
diabloNullTest[, -1]),
rbind(data.frame(error=diabloFullTrain$error, sd=diabloFullTrain$sd, cohort="train", method="DIABLO_Full"),
diabloFullTest[, -1]))
diabloNullTrain <- full_join(diabloNullDesign$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX),
diabloNullDesign$error.rate.sd %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, sd, -keepX),
by=c("keepX","comp")) %>%
group_by(comp) %>%
filter(error == min(error)) %>%
filter(comp == "comp3")
## keep 3 components
diabloNullTest <- diabloTestErr(X_train = X.train[names(X.test)], y_train = Y.train, X_test = X.test, y_test = Y.test, keepX = lapply(diabloNullDesign$choice.keepX, function(i) i[-ncomp]), design=design, ncomp=3, model_name="DIABLO_Null") %>%
filter(dist == "centroids.dist")
rbind(rbind(data.frame(error=diabloNullTrain$error, sd=diabloNullTrain$sd, cohort="train", method="DIABLO_Null"),
diabloNullTest[, -1]),
rbind(data.frame(error=diabloFullTrain$error, sd=diabloFullTrain$sd, cohort="train", method="DIABLO_Full"),
diabloFullTest[, -1]))
diabloErr <- rbind(rbind(data.frame(error=diabloNullTrain$error, sd=diabloNullTrain$sd, cohort="train", method="DIABLO_Null"),
diabloNullTest[, -1]),
rbind(data.frame(error=diabloFullTrain$error, sd=diabloFullTrain$sd, cohort="train", method="DIABLO_Full"),
diabloFullTest[, -1]))
splsdaConcat$error.rate
splsdaConcat
splsdaConcat$error.rate
splsdaConcat$choice.keepX
splsdaConcat$error.rate
head(splsdaConcat$error.rate %>%
mutate(keepX = rownames(.)))
head(splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)))
head(splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX))
splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX) %>%
group_by(comp) %>%
filter(error == mean(error))
splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX) %>%
group_by(comp) %>%
filter(error == min(error))
splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX) %>%
group_by(comp) %>%
filter(error == min(error)) %>%
filter(comp == "comp3")
splsdaConcat$choice.keepX
splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX) %>%
group_by(comp) %>%
filter(error == min(error)) %>%
filter(comp == "comp3")
diabloErr
head(splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX))
head(full_join(splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX),
splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, sd, -keepX),
by = c("comp")))
head(full_join(splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX),
splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, sd, -keepX),
by = c("keepX", "comp")))
full_join(splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX),
splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, sd, -keepX),
by = c("keepX", "comp")) %>%
group_by(comp) %>%
filter(error == min(error)) %>%
filter(comp == "comp3")
splsdaConcat$choice.keepX
ncomp
X_test <- do.call(cbind, X.test)
colnames(X_test) <- paste(rep(names(X.test), sapply(X.test, ncol)), unlist(sapply(X.test, colnames)), sep="_")
y_test <- Y.train
result <- splsda(X = X_train, Y = y_train , keepX = splsdaConcat$choice.keepX[1:3], ncomp = 3)
pred <- predict(result, X_test)
result
names(result)
result$loadings$mRNA
class(X_test)
pred <- predict(result, newdata=X_test)$class$centroids.dist[, 3]
?predict
methods(predict)
result
pred <- predict(result, list(X_test)$class$centroids.dist[, 3]
splsdaConcat$choice.keepX
pred <- predict(result, list(X_test))$class$centroids.dist[, 3]
pred <- predict(result, list(all=X_test))$class$centroids.dist[, 3]
mod <- splsda(X = X_train, Y = y_train , keepX = splsdaConcat$choice.keepX[1:3], ncomp = 3)
X_train
X_train <- do.call(cbind, X.train[names(X.test)])
colnames(X_train) <- paste(rep(names(X.test), sapply(X.test, ncol)), unlist(sapply(X.test, colnames)), sep="_")
y_train <- Y.train
mod <- splsda(X = X_train, Y = y_train, keepX = splsdaConcat$choice.keepX[1:3], ncomp = 3)
pred <- predict(mod, X_test)$class$centroids.dist[, 3]
pred
mat <- table(factor(pred, levels(y_test)), y_test)
mean((colSums(mat)-diag(mat))/colSums(mat))
pred
table(factor(pred, levels(y_test)), y_test)
levels(y_test)
factor(pred, levels(y_test))
y_test
length(factor(pred, levels(y_test)))
length(y_test)
X_test <- do.call(cbind, X.test)
colnames(X_test) <- paste(rep(names(X.test), sapply(X.test, ncol)), unlist(sapply(X.test, colnames)), sep="_")
y_test <- Y.test
mod <- splsda(X = X_train, Y = y_train, keepX = splsdaConcat$choice.keepX[1:3], ncomp = 3)
pred <- predict(mod, X_test)$class$centroids.dist[, 3]
mat <- table(factor(pred, levels(y_test)), y_test)
mean((colSums(mat)-diag(mat))/colSums(mat))
full_join(splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX),
splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, sd, -keepX),
by = c("keepX", "comp")) %>%
group_by(comp) %>%
filter(error == min(error)) %>%
filter(comp == "comp3")
splsdaTrainErr <- full_join(splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, error, -keepX),
splsdaConcat$error.rate %>%
as.data.frame() %>%
mutate(keepX = rownames(.)) %>%
gather(comp, sd, -keepX),
by = c("keepX", "comp")) %>%
group_by(comp) %>%
filter(error == min(error)) %>%
filter(comp == "comp3")
splsdaTestErr <- mean((colSums(mat)-diag(mat))/colSums(mat))
splsdaTestErr
splsdaConcat$choice.keepX
splsdaConcat$choice.keepX[1:3]
diabloErr
splsdaTrainErr
splsdaTestErr
splsdaErr <- data.frame(error = c(splsdaTrainErr$error, splsdaTestErr),
sd = c(splsdaTrainErr$sd, NA),
cohort = c("train", "test"),
method = "Concatenation_sPLSDA")
splsdaErr
enetConcat
enetConcat <- readRDS("~/Dropbox/PROOF/Manuscript/mixOmics/diablo_datasets/brca/enetConcat.rds")
enetConcat
enetConcat$panelLength
enetConcat$error
rbind(diabloErr, splsdaErr, enetConcat$error)
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, group = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd)) +
geom_point()
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd)) +
geom_point()
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd)) +
geom_point() +
ylim(c(0, 0.5))
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd), width = 0.1) +
geom_point() +
ylim(c(0, 0.5))
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd), width = 0.1) +
geom_point() +
ylim(c(0, 0.5)) +
geom_hline(yintercept = 0.5, linetype = "dashed")
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd), width = 0.1) +
geom_point() +
ylim(c(0, 0.5)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
customTheme(sizeStripFont = 15, xAngle = 30, hjust = 1, vjust = 1, xSize = 10, ySize = 10, xAxisSize = 10, yAxisSize = 10)
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd), width = 0.1) +
geom_point() +
ylim(c(0, c(0.1, 0.2, 0.5))) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
customTheme(sizeStripFont = 15, xAngle = 30, hjust = 1, vjust = 1, xSize = 10, ySize = 10, xAxisSize = 10, yAxisSize = 10)
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd), width = 0.1) +
geom_point() +
ylim(c(0, c(0.1, 0.2, 0.5)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
customTheme(sizeStripFont = 15, xAngle = 30, hjust = 1, vjust = 1, xSize = 10, ySize = 10, xAxisSize = 10, yAxisSize = 10)
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd), width = 0.1) +
geom_point() +
ylim(c(0, 0.5)) +
geom_hline(yintercept = c(0.1, 0.2, 0.5), linetype = "dashed") +
customTheme(sizeStripFont = 15, xAngle = 30, hjust = 1, vjust = 1, xSize = 10, ySize = 10, xAxisSize = 10, yAxisSize = 10)
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd), width = 0.1) +
geom_point() +
ylim(c(0, 0.5)) +
geom_hline(yintercept = c(0.1, 0.2), linetype = "dashed") +
customTheme(sizeStripFont = 15, xAngle = 30, hjust = 1, vjust = 1, xSize = 10, ySize = 10, xAxisSize = 10, yAxisSize = 10)
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd), width = 0.1) +
geom_point() +
ylim(c(0, 0.5)) +
geom_hline(yintercept = c(0.1, 0.2), linetype = "dashed") +
customTheme(sizeStripFont = 15, xAngle = 30, hjust = 1, vjust = 1, xSize = 10, ySize = 10, xAxisSize = 10, yAxisSize = 10) +
ylab("Balanced Error Rate (BER)")
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd), width = 0.1) +
geom_point() +
ylim(c(0, 0.5)) +
geom_hline(yintercept = c(0.1, 0.2), linetype = "dashed") +
customTheme(sizeStripFont = 15, xAngle = 30, hjust = 1, vjust = 1, xSize = 10, ySize = 10, xAxisSize = 10, yAxisSize = 10) +
ylab("Balanced Error Rate (BER)") +
xlab("Integrative methods")
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd), width = 0.1) +
geom_point(size=2) +
ylim(c(0, 0.5)) +
geom_hline(yintercept = c(0.1, 0.2), linetype = "dashed") +
customTheme(sizeStripFont = 15, xAngle = 30, hjust = 1, vjust = 1, xSize = 10, ySize = 10, xAxisSize = 10, yAxisSize = 10) +
ylab("Balanced Error Rate (BER)") +
xlab("Integrative methods")
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd), width = 0.1) +
geom_point(size=3) +
ylim(c(0, 0.5)) +
geom_hline(yintercept = c(0.1, 0.2), linetype = "dashed") +
customTheme(sizeStripFont = 15, xAngle = 30, hjust = 1, vjust = 1, xSize = 10, ySize = 10, xAxisSize = 10, yAxisSize = 10) +
ylab("Balanced Error Rate (BER)") +
xlab("Integrative methods")
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd), width = 0.1) +
geom_point(size=1) +
ylim(c(0, 0.5)) +
geom_hline(yintercept = c(0.1, 0.2), linetype = "dashed") +
customTheme(sizeStripFont = 15, xAngle = 30, hjust = 1, vjust = 1, xSize = 10, ySize = 10, xAxisSize = 10, yAxisSize = 10) +
ylab("Balanced Error Rate (BER)") +
xlab("Integrative methods")
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
ggplot(aes(x = method, y = error, fill = cohort, color = cohort)) +
geom_errorbar(aes(ymin = error-sd, ymax = error+sd), width = 0.1) +
geom_point(size=2) +
ylim(c(0, 0.5)) +
geom_hline(yintercept = c(0.1, 0.2), linetype = "dashed") +
customTheme(sizeStripFont = 15, xAngle = 30, hjust = 1, vjust = 1, xSize = 10, ySize = 10, xAxisSize = 10, yAxisSize = 10) +
ylab("Balanced Error Rate (BER)") +
xlab("Integrative methods")
rbind(diabloErr, splsdaErr, enetConcat$error)
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
mutate(error = signif(error, 3))
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
mutate(error = signif(error, 3),
sd = signif(sd, 3))
rbind(diabloErr, splsdaErr, enetConcat$error) %>%
mutate(error = signif(error, 2),
sd = signif(sd, 2))
setwd("~/Dropbox/PROOF/Manuscript/mixOmics/diablo_datasets/brca")
write.csv(rbind(diabloErr, splsdaErr, enetConcat$error) %>%
mutate(error = signif(error, 2),
sd = signif(sd, 2)),
"~/Dropbox/PROOF/Manuscript/mixOmics/diablo_datasets/brca/brcaMethodsErrorRates.csv")
diabloNullDesign$choice.keepX
sum(i[1:3])
diabloNullDesign$choice.keepX
lapply(diabloNullDesign$choice.keepX, function(i){
sum(i[1:3])
})
sapply(diabloNullDesign$choice.keepX, function(i){
sum(i[1:3])
})
sapply(diabloNullDesign$choice.keepX, function(i){sum(i[1:3])})
sapply(diabloFullDesign$choice.keepX, function(i){sum(i[1:3])})
splsdaConcat$choice.keepX[1:3]
enetConcat$panelLength
select(mod, comp = 1)
select(mod, ncomp = 1)
selectVar(mod, ncomp = 1)
selectVar(mod, ncomp = 1)$name
c(selectVar(mod, ncomp = 1)$name, selectVar(mod, ncomp = 2)$name, selectVar(mod, ncomp = 3)$name)
strsplit(c(selectVar(mod, ncomp = 1)$name, selectVar(mod, ncomp = 2)$name, selectVar(mod, ncomp = 3)$name), "_")
lapply(strsplit(c(selectVar(mod, ncomp = 1)$name, selectVar(mod, ncomp = 2)$name, selectVar(mod, ncomp = 3)$name), "_"), function(i) i[1])
sapply(strsplit(c(selectVar(mod, ncomp = 1)$name, selectVar(mod, ncomp = 2)$name, selectVar(mod, ncomp = 3)$name), "_"), function(i) i[1])
table(sapply(strsplit(c(selectVar(mod, ncomp = 1)$name, selectVar(mod, ncomp = 2)$name, selectVar(mod, ncomp = 3)$name), "_"), function(i) i[1]))
knitr::opts_chunk$set(fig.pos = 'p', message=FALSE, warning=FALSE, tidy=TRUE, echo=FALSE) # Places figures on their own pages
knitr::opts_chunk$set(out.width = '100%', dpi=300)
WhereAmI <- "~/Dropbox/PROOF/Manuscript/mixOmics/diablo/analyses/benchmarking/"
## load libraries
library(knitr)
library(cowplot)
library(r.jive)
library(tidyverse)
library(MOFAtools); library(MultiAssayExperiment);
library(sear)
library(grid)
library(mixOmics)
library(amritr)
library(org.Hs.eg.db)
library(UpSetR)
library(venn)
library(ggalt)
library(ggrepel)
library(igraph)
library(ggraph)
source(paste0(WhereAmI, "functions_connectivity_biologicalEnrichment.R"))
## load data
load("~/Dropbox/PROOF/Manuscript/mixOmics/diablo_datasets/benchmarking/SNFdatasets.RDATA")
